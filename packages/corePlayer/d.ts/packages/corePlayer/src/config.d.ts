export function createDefaultConfig(): {
    enableWorker: boolean;
    enableStashBuffer: boolean;
    stashInitialSize: any;
    isLive: boolean;
    liveBufferLatencyChasing: boolean;
    liveBufferLatencyMaxLatency: number;
    liveBufferLatencyMinRemain: number;
    lazyLoad: boolean;
    lazyLoadMaxDuration: number;
    lazyLoadRecoverDuration: number;
    deferLoadAfterSourceOpen: boolean;
    autoCleanupMaxBackwardDuration: number;
    autoCleanupMinBackwardDuration: number;
    statisticsInfoReportInterval: number;
    fixAudioTimestampGap: boolean;
    accurateSeek: boolean;
    seekType: string;
    seekParamStart: string;
    seekParamEnd: string;
    rangeLoadZeroStart: boolean;
    customSeekHandler: any;
    reuseRedirectedURL: boolean;
    headers: any;
    customLoader: any;
};
export namespace defaultConfig {
    let enableWorker: boolean;
    let enableStashBuffer: boolean;
    let stashInitialSize: any;
    let isLive: boolean;
    let liveBufferLatencyChasing: boolean;
    let liveBufferLatencyMaxLatency: number;
    let liveBufferLatencyMinRemain: number;
    let lazyLoad: boolean;
    let lazyLoadMaxDuration: number;
    let lazyLoadRecoverDuration: number;
    let deferLoadAfterSourceOpen: boolean;
    let autoCleanupMaxBackwardDuration: number;
    let autoCleanupMinBackwardDuration: number;
    let statisticsInfoReportInterval: number;
    let fixAudioTimestampGap: boolean;
    let accurateSeek: boolean;
    let seekType: string;
    let seekParamStart: string;
    let seekParamEnd: string;
    let rangeLoadZeroStart: boolean;
    let customSeekHandler: any;
    let reuseRedirectedURL: boolean;
    let headers: any;
    let customLoader: any;
}
