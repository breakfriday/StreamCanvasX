{"version":3,"sources":["./src/services/waveform_visualizer_render.ts"],"sourcesContent":["import { injectable, inject, Container } from 'inversify';\nimport { IDrawer } from '..';\n\n\nexport class WaveformVisualizer implements IDrawer {\n  mediaSource_el!: HTMLAudioElement|HTMLVideoElement;\n  canvas!: HTMLCanvasElement;\n  audioContext!: AudioContext;\n  canvasContext!: CanvasRenderingContext2D;\n  analyserNode: AnalyserNode;\n  audioSourceNode: MediaElementAudioSourceNode;\n  drawAudio1() {\n    const bufferLength = this.analyserNode.fftSize;\n    const dataArray = new Float32Array(bufferLength);\n\n    const AnimationFrame = () => {\n      this.analyserNode.getFloatTimeDomainData(dataArray);\n\n      // 清除画布\n      this.canvasContext.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n      // 设置波形图样式\n      this.canvasContext.lineWidth = 2;\n      this.canvasContext.strokeStyle = '#7f0';\n\n\n      // 绘制波形图\n      this.canvasContext.beginPath();\n      const sliceWidth = this.canvas.width / bufferLength;\n      let x = 0;\n      for (let i = 0; i < bufferLength; i++) {\n        const value = dataArray[i] * this.canvas.height / 2;\n        const y = this.canvas.height / 2 + value;\n\n        if (i === 0) {\n          this.canvasContext.moveTo(x, y);\n        } else {\n          this.canvasContext.lineTo(x, y);\n        }\n\n        x += sliceWidth;\n      }\n      this.canvasContext.lineTo(this.canvas.width, this.canvas.height / 2);\n      this.canvasContext.stroke();\n\n      // 循环绘制\n      requestAnimationFrame(AnimationFrame.bind(this));\n    };\n    AnimationFrame();\n  }\n}\n"],"names":["WaveformVisualizer","mediaSource_el","canvas","audioContext","canvasContext","analyserNode","audioSourceNode","drawAudio1","bufferLength","fftSize","dataArray","Float32Array","AnimationFrame","getFloatTimeDomainData","clearRect","width","height","lineWidth","strokeStyle","beginPath","sliceWidth","x","i","value","y","moveTo","lineTo","stroke","requestAnimationFrame","bind"],"mappings":";;;AAIA,OAAO,IAAA,AAAMA,mCAAN;;aAAMA;gCAAAA;QACXC,uBAAAA,kBAAAA,KAAAA;QACAC,uBAAAA,UAAAA,KAAAA;QACAC,uBAAAA,gBAAAA,KAAAA;QACAC,uBAAAA,iBAAAA,KAAAA;QACAC,uBAAAA,gBAAAA,KAAAA;QACAC,uBAAAA,mBAAAA,KAAAA;;kBANWN;;YAOXO,KAAAA;mBAAAA,SAAAA,aAAa;;gBACX,IAAMC,eAAe,IAAI,CAACH,YAAY,CAACI,OAAO;gBAC9C,IAAMC,YAAY,IAAIC,aAAaH;gBAEnC,IAAMI,iBAAiB,WAAM;oBAC3B,MAAKP,YAAY,CAACQ,sBAAsB,CAACH;oBAEzC,OAAO;oBACP,MAAKN,aAAa,CAACU,SAAS,CAAC,GAAG,GAAG,MAAKZ,MAAM,CAACa,KAAK,EAAE,MAAKb,MAAM,CAACc,MAAM;oBAExE,UAAU;oBACV,MAAKZ,aAAa,CAACa,SAAS,GAAG;oBAC/B,MAAKb,aAAa,CAACc,WAAW,GAAG;oBAGjC,QAAQ;oBACR,MAAKd,aAAa,CAACe,SAAS;oBAC5B,IAAMC,aAAa,MAAKlB,MAAM,CAACa,KAAK,GAAGP;oBACvC,IAAIa,IAAI;oBACR,IAAK,IAAIC,IAAI,GAAGA,IAAId,cAAcc,IAAK;wBACrC,IAAMC,QAAQb,SAAS,CAACY,EAAE,GAAG,MAAKpB,MAAM,CAACc,MAAM,GAAG;wBAClD,IAAMQ,IAAI,MAAKtB,MAAM,CAACc,MAAM,GAAG,IAAIO;wBAEnC,IAAID,MAAM,GAAG;4BACX,MAAKlB,aAAa,CAACqB,MAAM,CAACJ,GAAGG;wBAC/B,OAAO;4BACL,MAAKpB,aAAa,CAACsB,MAAM,CAACL,GAAGG;wBAC/B,CAAC;wBAEDH,KAAKD;oBACP;oBACA,MAAKhB,aAAa,CAACsB,MAAM,CAAC,MAAKxB,MAAM,CAACa,KAAK,EAAE,MAAKb,MAAM,CAACc,MAAM,GAAG;oBAClE,MAAKZ,aAAa,CAACuB,MAAM;oBAEzB,OAAO;oBACPC,sBAAsBhB,eAAeiB,IAAI;gBAC3C;gBACAjB;YACF;;;WA7CWZ;IA8CZ"}