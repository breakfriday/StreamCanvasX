{"version":3,"sources":["./src/services/mainCanvasPlayer.ts"],"sourcesContent":["import { injectable } from 'inversify';\nimport mpegts from 'mpegts.js';\nimport { ImainPlayerService } from '../types/services/index';\nimport Mpegts from 'mpegts.js';\n\n@injectable()\nclass mainPlayerService {\n    private video!: HTMLVideoElement;\n    private canvas!: HTMLCanvasElement;\n    private context!: CanvasRenderingContext2D;\n    private mpegtsPlayer: Mpegts.Player;\n    private root_el: HTMLElement;\n    private aspectRatio: number;\n\n    private config: Parameters<ImainPlayerService['setConfig']>[0];\n\n    constructor(parmams: Parameters<ImainPlayerService['factory']>[0]) {\n      // this.video = parmams.vedio_el;\n      this.video = document.createElement('video');\n      this.video.controls = true;\n      this.canvas = parmams.canvas_el;\n      this.root_el = parmams.root_el;\n      this.config = parmams.config || {};\n      if (this.canvas) {\n        this.context = this.canvas.getContext('2d')!;\n      }\n\n\n      this.root_el.innerHTML = '';\n\n      this.root_el.appendChild(this.video);\n\n      this.setVideoSize();\n      this.vedioEvents();\n    }\n    get _vedio() {\n      return this.video;\n    }\n    createFlvPlayer(parms: Parameters<ImainPlayerService['createFlvPlayer']>[0]) {\n      let { type, isLive, url } = parms;\n      let videoEl = this.video;\n\n      if (videoEl) {\n        this.mpegtsPlayer = mpegts.createPlayer({\n          type: type!, // could also be mpegts, m2ts, flv\n          isLive: isLive,\n          url: url,\n          hasAudio: true,\n        });\n        this.mpegtsPlayer.attachMediaElement(videoEl);\n        this.mpegtsPlayer.load();\n        this.mpegtsPlayer.play();\n\n        this.mpegtsPlayer.on(mpegts.Events.ERROR, (error, detailError) => {\n          if (error === mpegts.ErrorTypes.NETWORK_ERROR) {\n            if (detailError === mpegts.ErrorDetails.NETWORK_UNRECOVERABLE_EARLY_EOF) {\n              this.reoload();\n            }\n            if (detailError === mpegts.ErrorDetails.NETWORK_TIMEOUT) {\n              return false;\n            }\n          }\n        });\n      }\n    }\n\n    setConfig(params: Parameters<ImainPlayerService['setConfig']>[0]) {\n      this.config = Object.assign({}, this.config, params);\n    }\n\n    load() {\n      this.mpegtsPlayer.load();\n    }\n    play() {\n      this.mpegtsPlayer.play();\n    }\n    paused() {\n      this.mpegtsPlayer.pause();\n    }\n\n    reoload() {\n       this.mpegtsPlayer.unload();\n       this.mpegtsPlayer.detachMediaElement();\n       this.mpegtsPlayer.attachMediaElement(this.video);\n      this.mpegtsPlayer.load();\n      this.mpegtsPlayer.play();\n    }\n\n    set_blob_url(filedata: File) {\n      let blobUrl = URL.createObjectURL(filedata);\n      this.video.src = blobUrl;\n      this.video.load();\n    }\n\n    vedioEvents() {\n      this.loadMediaEvent();\n\n      this.video.addEventListener(\n        'play',\n        () => {\n          requestAnimationFrame(this.analyzeCanvas.bind(this));\n        },\n        false,\n      );\n    }\n\n    loadMediaEvent() {\n      const video_el = this.video;\n      if (video_el) {\n        video_el.addEventListener('loadedmetadata', () => {\n        let { videoHeight, videoWidth } = video_el;\n\n\n        // 计算最大公约数 （数学上求最大公约数的方法是“辗转相除法”，就是用一个数除以另一个数（不需要知道大小），取余数，再用被除数除以余数再取余，再用新的被除数除以新的余数再取余，直到余数为0，最后的被除数就是最大公约数）\n          function gcd(a, b) {\n              return b === 0 ? a : gcd(b, a % b);\n          }\n\n          let greatestCommonDivisor = gcd(videoWidth, videoHeight);\n\n          // 计算宽高比\n          let aspectRatioWidth = videoWidth / greatestCommonDivisor;\n          let aspectRatioHeight = videoHeight / greatestCommonDivisor;\n\n          let ratio = `${aspectRatioWidth}:${aspectRatioHeight}`;\n\n           this.aspectRatio = aspectRatioWidth / aspectRatioHeight;\n\n\n          console.log('------------------------');\n          console.log(ratio);\n          console.log('------------------------');\n        });\n      }\n    }\n\n    setVideoSize() {\n      let height = this.root_el.clientHeight;\n      let width = this.root_el.clientWidth;\n\n      this.video.height = height;\n      this.video.width = width;\n    }\n\n    analyzeCanvas() {\n      if (this.video.ended || this.video.paused) {\n        return;\n      }\n\n      this.context.drawImage(\n        this.video,\n        0,\n        0,\n        this.canvas.width,\n        this.canvas.height / this.aspectRatio,\n      );\n\n      // 背景色域渐变\n      const {\n        data: [r, g, b],\n      } = this.context.getImageData(0, 0, 1, 1);\n\n      // document.body.style.cssText = `background: rgb(${r}, ${g}, ${b});`;\n      requestAnimationFrame(this.analyzeCanvas.bind(this));\n    }\n  }\n\n\n  export default mainPlayerService;\n\n"],"names":["injectable","mpegts","mainPlayerService","parmams","video","canvas","context","mpegtsPlayer","root_el","aspectRatio","config","document","createElement","controls","canvas_el","getContext","innerHTML","appendChild","setVideoSize","vedioEvents","_vedio","createFlvPlayer","parms","type","isLive","url","videoEl","createPlayer","hasAudio","attachMediaElement","load","play","on","Events","ERROR","error","detailError","ErrorTypes","NETWORK_ERROR","ErrorDetails","NETWORK_UNRECOVERABLE_EARLY_EOF","reoload","NETWORK_TIMEOUT","setConfig","params","Object","assign","paused","pause","unload","detachMediaElement","set_blob_url","filedata","blobUrl","URL","createObjectURL","src","loadMediaEvent","addEventListener","requestAnimationFrame","analyzeCanvas","bind","video_el","videoHeight","videoWidth","gcd","a","b","greatestCommonDivisor","aspectRatioWidth","aspectRatioHeight","ratio","console","log","height","clientHeight","width","clientWidth","ended","drawImage","getImageData","data","r","g"],"mappings":"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"}