{"version":3,"sources":["./src/services/waveform_visualizer_render.ts"],"sourcesContent":["import { injectable, inject, Container } from 'inversify';\nimport { IDrawer } from '..';\n\n\nexport class WaveformVisualizer implements IDrawer {\n  mediaSource_el!: HTMLAudioElement|HTMLVideoElement;\n  canvas!: HTMLCanvasElement;\n  audioContext!: AudioContext;\n  canvasContext!: CanvasRenderingContext2D;\n  analyserNode: AnalyserNode;\n  audioSourceNode: MediaElementAudioSourceNode;\n  drawAudio1() {\n    const bufferLength = this.analyserNode.fftSize;\n    const dataArray = new Float32Array(bufferLength);\n\n    const AnimationFrame = () => {\n      this.analyserNode.getFloatTimeDomainData(dataArray);\n\n      // 清除画布\n      this.canvasContext.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n      // 设置波形图样式\n      this.canvasContext.lineWidth = 2;\n      this.canvasContext.strokeStyle = '#7f0';\n\n\n      // 绘制波形图\n      this.canvasContext.beginPath();\n      const sliceWidth = this.canvas.width / bufferLength;\n      let x = 0;\n      for (let i = 0; i < bufferLength; i++) {\n        const value = dataArray[i] * this.canvas.height / 2;\n        const y = this.canvas.height / 2 + value;\n\n        if (i === 0) {\n          this.canvasContext.moveTo(x, y);\n        } else {\n          this.canvasContext.lineTo(x, y);\n        }\n\n        x += sliceWidth;\n      }\n      this.canvasContext.lineTo(this.canvas.width, this.canvas.height / 2);\n      this.canvasContext.stroke();\n\n      // 循环绘制\n      requestAnimationFrame(AnimationFrame.bind(this));\n    };\n    AnimationFrame();\n  }\n}\n"],"names":["WaveformVisualizer","drawAudio1","bufferLength","analyserNode","fftSize","dataArray","Float32Array","AnimationFrame","getFloatTimeDomainData","canvasContext","clearRect","canvas","width","height","lineWidth","strokeStyle","beginPath","sliceWidth","x","i","value","y","moveTo","lineTo","stroke","requestAnimationFrame","bind","mediaSource_el","audioContext","audioSourceNode"],"mappings":";AAIA,OAAO,MAAMA;IAOXC,aAAa;QACX,MAAMC,eAAe,IAAI,CAACC,YAAY,CAACC,OAAO;QAC9C,MAAMC,YAAY,IAAIC,aAAaJ;QAEnC,MAAMK,iBAAiB,IAAM;YAC3B,IAAI,CAACJ,YAAY,CAACK,sBAAsB,CAACH;YAEzC,OAAO;YACP,IAAI,CAACI,aAAa,CAACC,SAAS,CAAC,GAAG,GAAG,IAAI,CAACC,MAAM,CAACC,KAAK,EAAE,IAAI,CAACD,MAAM,CAACE,MAAM;YAExE,UAAU;YACV,IAAI,CAACJ,aAAa,CAACK,SAAS,GAAG;YAC/B,IAAI,CAACL,aAAa,CAACM,WAAW,GAAG;YAGjC,QAAQ;YACR,IAAI,CAACN,aAAa,CAACO,SAAS;YAC5B,MAAMC,aAAa,IAAI,CAACN,MAAM,CAACC,KAAK,GAAGV;YACvC,IAAIgB,IAAI;YACR,IAAK,IAAIC,IAAI,GAAGA,IAAIjB,cAAciB,IAAK;gBACrC,MAAMC,QAAQf,SAAS,CAACc,EAAE,GAAG,IAAI,CAACR,MAAM,CAACE,MAAM,GAAG;gBAClD,MAAMQ,IAAI,IAAI,CAACV,MAAM,CAACE,MAAM,GAAG,IAAIO;gBAEnC,IAAID,MAAM,GAAG;oBACX,IAAI,CAACV,aAAa,CAACa,MAAM,CAACJ,GAAGG;gBAC/B,OAAO;oBACL,IAAI,CAACZ,aAAa,CAACc,MAAM,CAACL,GAAGG;gBAC/B,CAAC;gBAEDH,KAAKD;YACP;YACA,IAAI,CAACR,aAAa,CAACc,MAAM,CAAC,IAAI,CAACZ,MAAM,CAACC,KAAK,EAAE,IAAI,CAACD,MAAM,CAACE,MAAM,GAAG;YAClE,IAAI,CAACJ,aAAa,CAACe,MAAM;YAEzB,OAAO;YACPC,sBAAsBlB,eAAemB,IAAI,CAAC,IAAI;QAChD;QACAnB;IACF;;QA5CAoB,uBAAAA,kBAAAA,KAAAA;QACAhB,uBAAAA,UAAAA,KAAAA;QACAiB,uBAAAA,gBAAAA,KAAAA;QACAnB,uBAAAA,iBAAAA,KAAAA;QACAN,uBAAAA,gBAAAA,KAAAA;QACA0B,uBAAAA,mBAAAA,KAAAA;;AAwCF,CAAC"}