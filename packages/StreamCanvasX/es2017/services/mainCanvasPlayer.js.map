{"version":3,"sources":["./src/services/mainCanvasPlayer.ts"],"sourcesContent":["import { injectable } from 'inversify';\nimport mpegts from 'mpegts.js';\nimport { ImainPlayerService } from '../types/services/index';\nimport Mpegts from 'mpegts.js';\n\n@injectable()\nclass mainPlayerService {\n    private video!: HTMLVideoElement;\n    private canvas!: HTMLCanvasElement;\n    private context!: CanvasRenderingContext2D;\n    private mpegtsPlayer: Mpegts.Player;\n\n    constructor(parmams: { vedio_el: HTMLVideoElement; canvas_el: HTMLCanvasElement }) {\n      this.video = parmams.vedio_el;\n      this.canvas = parmams.canvas_el;\n      if (this.canvas) {\n        this.context = this.canvas.getContext('2d')!;\n      }\n\n      this.video.addEventListener(\n        'play',\n        () => {\n          requestAnimationFrame(this.analyzeCanvas.bind(this));\n        },\n        false,\n      );\n    }\n    createFlvPlayer(parms: Parameters<ImainPlayerService['createFlvPlayer']>[0]) {\n      let { type, isLive, url } = parms;\n      let videoEl = this.video;\n\n      if (videoEl) {\n        this.mpegtsPlayer = mpegts.createPlayer({\n          type: type!, // could also be mpegts, m2ts, flv\n          isLive: isLive,\n          url: url,\n          hasAudio: true,\n        });\n        this.mpegtsPlayer.attachMediaElement(videoEl);\n        this.mpegtsPlayer.load();\n        this.mpegtsPlayer.play();\n\n        this.mpegtsPlayer.on(mpegts.Events.ERROR, (error, detailError) => {\n          if (error === mpegts.ErrorTypes.NETWORK_ERROR) {\n            if (detailError === mpegts.ErrorDetails.NETWORK_UNRECOVERABLE_EARLY_EOF) {\n              this.reoload();\n            }\n            if (detailError === mpegts.ErrorDetails.NETWORK_TIMEOUT) {\n              return false;\n            }\n          }\n        });\n      }\n    }\n\n    setConfig() {\n\n    }\n\n    load() {\n      this.mpegtsPlayer.load();\n    }\n    play() {\n      this.mpegtsPlayer.play();\n    }\n    paused() {\n      this.mpegtsPlayer.pause();\n    }\n\n    reoload() {\n       this.mpegtsPlayer.unload();\n       this.mpegtsPlayer.detachMediaElement();\n       this.mpegtsPlayer.attachMediaElement(this.video);\n      this.mpegtsPlayer.load();\n      this.mpegtsPlayer.play();\n    }\n\n    set_blob_url(filedata: File) {\n      let blobUrl = URL.createObjectURL(filedata);\n      this.video.src = blobUrl;\n      this.video.load();\n    }\n\n    analyzeCanvas() {\n      if (this.video.ended || this.video.paused) {\n        return;\n      }\n\n      this.context.drawImage(\n        this.video,\n        0,\n        0,\n        800,\n        800,\n      );\n\n      const {\n        data: [r, g, b],\n      } = this.context.getImageData(0, 0, 1, 1);\n\n      document.body.style.cssText = `background: rgb(${r}, ${g}, ${b});`;\n      requestAnimationFrame(this.analyzeCanvas.bind(this));\n    }\n  }\n\n\n  export default mainPlayerService;\n\n"],"names":["injectable","mpegts","mainPlayerService","createFlvPlayer","parms","type","isLive","url","videoEl","video","mpegtsPlayer","createPlayer","hasAudio","attachMediaElement","load","play","on","Events","ERROR","error","detailError","ErrorTypes","NETWORK_ERROR","ErrorDetails","NETWORK_UNRECOVERABLE_EARLY_EOF","reoload","NETWORK_TIMEOUT","setConfig","paused","pause","unload","detachMediaElement","set_blob_url","filedata","blobUrl","URL","createObjectURL","src","analyzeCanvas","ended","context","drawImage","data","r","g","b","getImageData","document","body","style","cssText","requestAnimationFrame","bind","constructor","parmams","canvas","vedio_el","canvas_el","getContext","addEventListener"],"mappings":"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"}