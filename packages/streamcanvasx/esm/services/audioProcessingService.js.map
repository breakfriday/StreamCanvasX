{"version":3,"sources":["./src/services/audioProcessingService.ts"],"sourcesContent":["import { IProcess } from '../types/services';\nclass AudioProcessingService {\n  context: IProcess['context'];\n  dataArray: Float32Array;\n  bufferLength: number;\n  bufferData: Float32Array; // 时域 缓存\n  bufferDataLength: number;\n\n  constructor(parmams: { media_el?: HTMLAudioElement; canvas_el?: HTMLCanvasElement}) {\n    const { canvas_el, media_el } = parmams;\n    this.context = {};\n    if (canvas_el) {\n      this.setCanvasDom(canvas_el);\n    }\n    this.createAudioContext();\n    this.setMediaSource_el(media_el);\n    this.audioContextConnect();\n  }\n\n\n  createAudioContext() {\n    this.context.audioContext = new AudioContext();\n    this.context.analyserNode = this.context.audioContext.createAnalyser();\n\n    this.bufferLength = this.context.analyserNode!.fftSize;\n    this.dataArray = new Float32Array(this.bufferLength);\n    this.setBufferData();\n  }\n\n  setBufferData() {\n       // 根据 AudioContext 的采样率、所需的缓存时间和 FFT 大小来设置缓存区大小\n       this.bufferDataLength = Math.ceil(1 * this.context.audioContext!.sampleRate / this.dataArray.length) * this.dataArray.length;\n       this.bufferData = new Float32Array(this.bufferDataLength);\n  }\n\n  updateBufferData() {\n    let { dataArray, bufferData } = this;\n    let { bufferDataLength } = this;\n      // 将旧的数据向前移动\n    bufferData.copyWithin(0, dataArray.length);\n    this.context.analyserNode?.getFloatTimeDomainData(dataArray);\n    // 将新的数据添加到缓存的末尾\n    bufferData.set(dataArray, bufferDataLength - dataArray.length);\n    // 每帧都更新缓存\n    requestAnimationFrame(this.updateBufferData.bind(this));\n  }\n\n  drawWithBufferData() {\n    let dataArray = this.bufferData;\n    let bufferLength = this.bufferDataLength;\n    const AnimationFrame = () => {\n      // 清除画布\n      this.context.canvasContext!.clearRect(0, 0, this.context.canvas!.width, this.context.canvas!.height);\n\n      // 设置波形图样式\n      this.context.canvasContext!.lineWidth = 2;\n      this.context.canvasContext!.strokeStyle = '#7f0';\n\n\n      // 绘制波形图\n      this.context.canvasContext!.beginPath();\n      const sliceWidth = this.context.canvas!.width / bufferLength;\n      let x = 0;\n      for (let i = 0; i < bufferLength; i++) {\n        const value = dataArray[i] * this.context.canvas!.height / 2;\n        const y = this.context.canvas!.height / 2 + value;\n\n        if (i === 0) {\n          this.context.canvasContext!.moveTo(x, y);\n        } else {\n          this.context.canvasContext!.lineTo(x, y);\n        }\n\n        x += sliceWidth;\n      }\n      this.context.canvasContext!.lineTo(this.context.canvas!.width, this.context.canvas!.height / 2);\n      this.context.canvasContext!.stroke();\n\n      // 循环绘制\n      requestAnimationFrame(AnimationFrame.bind(this));\n    };\n    AnimationFrame();\n  }\n\n  setCanvasDom(el: HTMLCanvasElement) {\n    this.context.canvas = el;\n    this.context.canvasContext = this.context.canvas.getContext('2d')!;\n  }\n\n  setMediaSource_el(el) {\n    this.context.mediaSource_el = el;\n    this.context.audioSourceNode = this.context.audioContext!.createMediaElementSource(el);\n  }\n\n  resetAudioContextConnec() {\n    this.context.audioSourceNode?.disconnect();\n    this.audioContextConnect();\n  }\n\n  audioContextConnect() {\n    this.context.audioSourceNode!.connect(this.context.analyserNode!);\n    this.context.analyserNode!.connect(this.context.audioContext!.destination);\n  }\n\n  mute(parm) {\n    if (parm === true) {\n      this.context.analyserNode!.disconnect(this.context.audioContext!.destination);\n    } else {\n      this.context.analyserNode!.connect(this.context.audioContext!.destination);\n    }\n  }\n\n  visulizerDraw() {\n    const bufferLength = this.context.analyserNode!.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n    const AnimationFrame = () => {\n      requestAnimationFrame(AnimationFrame.bind(this));\n      // 获取音频数据\n      this.context.analyserNode!.getByteFrequencyData(dataArray);\n\n      // 清除canvas\n      this.context.canvasContext!.fillStyle = 'rgb(255, 255, 255)';\n      this.context.canvasContext!.fillRect(0, 0, this.context.canvas!.width, this.context.canvas!.height);\n\n      // 设置绘制音频数据的样式\n      const barWidth = (this.context.canvas!.width / bufferLength) * 2.5;\n      let barHeight;\n      let x = 0;\n\n      for (let i = 0; i < bufferLength; i++) {\n        barHeight = dataArray[i] / 2;\n\n        const r = barHeight + (25 * (i / bufferLength));\n        const g = 250 * (i / bufferLength);\n        const b = 50;\n\n        // this.canvasContext.fillStyle = 'rgb(0, 0, 0)';\n        // this.canvas_context.fillStyle = `rgb(${r},${g},${b})`;\n        this.context.canvasContext!.fillStyle = 'rgb(0, 0, 0)';\n        this.context.canvasContext!.fillRect(x, this.context.canvas!.height - barHeight, barWidth, barHeight);\n\n        x += barWidth + 1;\n      }\n    };\n    AnimationFrame();\n  }\n\n  visulizerDraw1() {\n    const bufferLength = this.context.analyserNode!.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n\n    const AnimationFrame = () => {\n      requestAnimationFrame(AnimationFrame.bind(this));\n      // 将音频数据填充到数组当中\n      this.context.analyserNode!.getByteFrequencyData(dataArray);\n\n      // 清除canvas\n      this.context.canvasContext!.fillStyle = '#000';\n      this.context.canvasContext!.fillRect(0, 0, this.context.canvas!.width, this.context.canvas!.height);\n\n      const barWidth = (this.context.canvas!.width / bufferLength) * 2.5;\n      let barHeight;\n      let x = 0;\n\n      for (let i = 0; i < bufferLength; i++) {\n        barHeight = dataArray[i];\n\n        const r = barHeight + (25 * (i / bufferLength));\n        const g = 250 * (i / bufferLength);\n        const b = 50;\n\n        this.context.canvasContext!.fillStyle = `rgb(${r},${g},${b})`;\n        this.context.canvasContext!.fillRect(x, this.context.canvas!.height - barHeight, barWidth, barHeight);\n\n        x += barWidth + 1;\n      }\n    };\n\n    AnimationFrame();\n  }\n\n\n  // 时域\n  visulizerDraw2() {\n    const bufferLength = this.context.analyserNode!.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n\n    const AnimationFrame = () => {\n      requestAnimationFrame(AnimationFrame.bind(this));\n      // 获取音频数据\n      this.context.analyserNode!.getByteFrequencyData(dataArray);\n\n\n      this.context.canvasContext!.fillStyle = 'rgba(0, 0, 0, 0.05)';\n      this.context.canvasContext!.fillRect(0, 0, this.context.canvas!.width, this.context.canvas!.height);\n      this.context.canvasContext!.lineWidth = 2;\n      this.context.canvasContext!.strokeStyle = 'rgb(0, 255, 0)';\n\n      this.context.canvasContext!.beginPath();\n\n      const sliceWidth = this.context.canvas!.width * 1.0 / bufferLength;\n      let x = 0;\n\n      for (let i = 0; i < bufferLength; i++) {\n        const v = dataArray[i] / 128.0;\n        const y = v * this.context.canvas!.height / 2;\n\n        if (i === 0) {\n          this.context.canvasContext!.moveTo(x, y);\n        } else {\n          this.context.canvasContext!.lineTo(x, y);\n        }\n\n        x += sliceWidth;\n      }\n\n      this.context.canvasContext!.lineTo(this.context.canvas!.width, this.context.canvas!.height / 2);\n      this.context.canvasContext!.stroke();\n    };\n\n    AnimationFrame();\n  }\n\n  visulizerDraw3() {\n    const { bufferLength } = this;\n    const { dataArray } = this;\n\n    const AnimationFrame = () => {\n      this.context.analyserNode!.getFloatTimeDomainData(dataArray);\n\n      // 清除画布\n      this.context.canvasContext!.clearRect(0, 0, this.context.canvas!.width, this.context.canvas!.height);\n\n      // 设置波形图样式\n      this.context.canvasContext!.lineWidth = 2;\n      this.context.canvasContext!.strokeStyle = '#7f0';\n\n\n      // 绘制波形图\n      this.context.canvasContext!.beginPath();\n      const sliceWidth = this.context.canvas!.width / bufferLength;\n      let x = 0;\n      for (let i = 0; i < bufferLength; i++) {\n        const value = dataArray[i] * this.context.canvas!.height / 2;\n        const y = this.context.canvas!.height / 2 + value;\n\n        if (i === 0) {\n          this.context.canvasContext!.moveTo(x, y);\n        } else {\n          this.context.canvasContext!.lineTo(x, y);\n        }\n\n        x += sliceWidth;\n      }\n      this.context.canvasContext!.lineTo(this.context.canvas!.width, this.context.canvas!.height / 2);\n      this.context.canvasContext!.stroke();\n\n      // 循环绘制\n      requestAnimationFrame(AnimationFrame.bind(this));\n    };\n    AnimationFrame();\n  }\n\n  visulizerDraw4() {\n    const bufferLength = this.context.analyserNode!.fftSize;\n    const dataArray = new Float32Array(bufferLength);\n    const AnimationFrame = () => {\n      requestAnimationFrame(AnimationFrame.bind(this));\n      this.context.analyserNode!.getFloatTimeDomainData(dataArray);\n\n      this.context.canvasContext!.fillStyle = 'rgba(0, 0, 0, 0.1)';\n      this.context.canvasContext!.fillRect(0, 0, this.context.canvas!.width, this.context.canvas!.height);\n\n      this.context.canvasContext!.lineWidth = 2;\n      this.context.canvasContext!.strokeStyle = 'rgb(0, 255, 0)';\n      this.context.canvasContext!.beginPath();\n\n      const sliceWidth = this.context.canvas!.width * 1.0 / bufferLength;\n      let x = 0;\n\n      for (let i = 0; i < bufferLength; i++) {\n        const v = dataArray[i] / 128.0;\n        const y = v * this.context.canvas!.height / 2;\n\n        if (i === 0) {\n          this.context.canvasContext!.moveTo(x, y);\n        } else {\n          this.context.canvasContext!.lineTo(x, y);\n        }\n\n        x += sliceWidth;\n      }\n\n      this.context.canvasContext!.lineTo(this.context.canvas!.width, this.context.canvas!.height / 2);\n      this.context.canvasContext!.stroke();\n    };\n\n    AnimationFrame();\n  }\n}\n\nexport default AudioProcessingService;\n"],"names":["AudioProcessingService","parmams","context","dataArray","bufferLength","bufferData","bufferDataLength","canvas_el","media_el","setCanvasDom","createAudioContext","setMediaSource_el","audioContextConnect","audioContext","AudioContext","analyserNode","createAnalyser","fftSize","Float32Array","setBufferData","Math","ceil","sampleRate","length","updateBufferData","copyWithin","getFloatTimeDomainData","set","requestAnimationFrame","bind","drawWithBufferData","AnimationFrame","canvasContext","clearRect","canvas","width","height","lineWidth","strokeStyle","beginPath","sliceWidth","x","i","value","y","moveTo","lineTo","stroke","el","getContext","mediaSource_el","audioSourceNode","createMediaElementSource","resetAudioContextConnec","disconnect","connect","destination","mute","parm","visulizerDraw","frequencyBinCount","Uint8Array","getByteFrequencyData","fillStyle","fillRect","barWidth","barHeight","r","g","b","visulizerDraw1","visulizerDraw2","v","visulizerDraw3","visulizerDraw4"],"mappings":"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"}