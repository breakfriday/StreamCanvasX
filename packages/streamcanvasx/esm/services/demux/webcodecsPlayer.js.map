{"version":3,"sources":["./src/services/demux/webcodecsPlayer.ts"],"sourcesContent":["async function decodeVideo2(buffer) {\n    let videoDecoder = new VideoDecoder({\n      output: function (frame) {\n        let canvas = document.getElementById('canvas');\n        let context = canvas.getContext('2d');\n        context.drawImage(frame, 0, 0);\n        frame.close();\n      },\n      error: function (e) {\n        console.error(e);\n      },\n    });\n    await videoDecoder.configure({ codec: 'vp8' }); // configure with appropriate codec\n    videoDecoder.decode(new EncodedVideoChunk({\n      type: 'key',\n      timestamp: 0,\n      data: buffer,\n    }));\n  }\n\n\n  class DecodeVide {\n    constructor() {\n\n    }\n    async startDeconding() {\n\n    }\n  }"],"names":["decodeVideo2","buffer","videoDecoder","VideoDecoder","output","frame","canvas","document","getElementById","context","getContext","drawImage","close","error","e","console","configure","codec","decode","EncodedVideoChunk","type","timestamp","data","DecodeVide","startDeconding"],"mappings":";;;;SAAeA,aAAaC,MAAM;WAAnBD;;SAAAA;IAAAA,gBAAf,oBAAA,SAA4BC,MAAM,EAAE;YAC5BC;;;;oBAAAA,eAAe,IAAIC,aAAa;wBAClCC,QAAQ,SAARA,OAAkBC,KAAK,EAAE;4BACvB,IAAIC,SAASC,SAASC,cAAc,CAAC;4BACrC,IAAIC,UAAUH,OAAOI,UAAU,CAAC;4BAChCD,QAAQE,SAAS,CAACN,OAAO,GAAG;4BAC5BA,MAAMO,KAAK;wBACb;wBACAC,OAAO,SAAPA,MAAiBC,CAAC,EAAE;4BAClBC,QAAQF,KAAK,CAACC;wBAChB;oBACF;oBACA;;wBAAMZ,aAAac,SAAS,CAAC;4BAAEC,OAAO;wBAAM;;;oBAA5C,eAAgD,mCAAmC;oBACnFf,aAAagB,MAAM,CAAC,IAAIC,kBAAkB;wBACxCC,MAAM;wBACNC,WAAW;wBACXC,MAAMrB;oBACR;;;;;;IACF;WAlBaD;;AAqBb,IAAA,AAAMuB,2BAAN;;aAAMA;gCAAAA;;kBAAAA;;YAIEC,KAAAA;mBAAN,SAAMA;uBAAN,oBAAA,WAAuB;;;;;;gBAEvB;;;;WANID"}