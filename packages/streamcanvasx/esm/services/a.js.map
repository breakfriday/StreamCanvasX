{"version":3,"sources":["./src/services/a.ts"],"sourcesContent":["/* eslint-disable */\nimport { TsDemuxer } from \"./ts-demuxer\";\n\nif (!(\"VideoDecoder\" in window)) {\n  window.alert(\n    \"请开启 chrome://flags/#enable-experimental-web-platform-features\"\n  );\n} else {\n  main();\n}\n\nasync function main() {\n  const isAvcC = false; // avcC 格式还是 AnnexB，false 为 AnnexB 格式\n\n  // 下载 10s 电影片段\n  const response = await fetch(\n    \"https://test-streams.mux.dev/x36xhzz/url_4/url_718/193039199_mp4_h264_aac_7.ts\"\n  );\n  const movie = new Uint8Array(await response.arrayBuffer());\n\n  // demux\n  const tsDemuxer = new TsDemuxer();\n  const avcTrack = tsDemuxer.demux(movie).video;\n\n  // 创建 canvas 用来渲染电影\n  const canvas = document.createElement(\"canvas\");\n  canvas.width = avcTrack.width;\n  canvas.height = avcTrack.height;\n  document.body.appendChild(canvas);\n  const ctx = canvas.getContext(\"2d\");\n  ctx.font = \"30px serif\";\n\n  // VideoDecoder 配置\n  const decoderConfig = {\n    codec: avcTrack.codec\n  };\n\n  if (isAvcC) {\n    decoderConfig.description = AVCDecoderConfigurationRecord(avcTrack);\n  }\n\n  const { config, supported } = await VideoDecoder.isConfigSupported(\n    decoderConfig\n  );\n  console.log(config);\n  if (!supported) {\n    window.alert(`当前设备不支持解码 codec: ${avcTrack.codec}`);\n    return;\n  }\n\n  let frameCount = 0;\n  let startTime;\n  const decoder = new VideoDecoder({\n    output: (frame) => {\n      ctx.drawImage(frame, 0, 0, canvas.width, canvas.height);\n      frame.close();\n\n      const now = performance.now();\n      let fps = \"\";\n      if (frameCount++) {\n        fps = (1000 * (frameCount / (now - startTime))).toFixed(0) + \" FPS\";\n      } else {\n        startTime = now;\n      }\n\n      ctx.fillText(fps, 20, 50);\n    },\n    error: console.error\n  });\n\n  // 配置 VideoDecoder\n  decoder.configure(decoderConfig);\n\n\n  //这段代码从一个H.264流（avcTrack.frames）中读取每一个视频帧，然后将这些帧送入一个视频解码器进行解码。以下是这段代码的详细解释：\n\n  const sleep = (ms) => new Promise((r) => setTimeout(r, ms));\n  for (let frame of avcTrack.frames) {\n    // 封装成 AnnexB 格式\n    const data = isAvcC ? avcC(frame.units) : AnnexB(frame.units);\n\n    const timestamp = frame.pts / 90000;\n    const duration = frame.duration / 90000;\n\n    const chunk = new EncodedVideoChunk({\n      type: frame.key ? \"key\" : \"delta\",\n      timestamp: timestamp * 1000000, // 微秒\n      duration: duration * 1000000, // 微秒\n      data\n    });\n\n    decoder.decode(chunk);\n\n    await sleep(duration * 1000);\n  }\n}\n\nfunction AnnexB(units) {\n  const size = units.reduce((t, u) => t + u.byteLength, 0) + units.length * 3;\n  const data = new Uint8Array(size);\n\n  let offset = 0;\n  units.forEach((unit) => {\n    data.set([0, 0, 1], offset);\n    offset += 3;\n    data.set(unit, offset);\n    offset += unit.byteLength;\n  });\n\n  return data;\n}\n\nfunction avcC(units) {\n  const size = units.reduce((t, u) => t + u.byteLength, 0) + units.length * 4;\n  const data = new Uint8Array(size);\n  const dataView = new DataView(data.buffer);\n\n  let offset = 0;\n  units.forEach((unit) => {\n    dataView.setUint32(offset, unit.byteLength);\n    offset += 4;\n    data.set(unit, offset);\n    offset += unit.byteLength;\n  });\n\n  return data;\n}\n\nfunction AVCDecoderConfigurationRecord(track) {\n  const sps = [];\n  const pps = [];\n\n  let len;\n  track.sps.forEach((s) => {\n    len = s.byteLength;\n    sps.push((len >>> 8) & 0xff);\n    sps.push(len & 0xff);\n    sps.push(...s);\n  });\n\n  track.pps.forEach((p) => {\n    len = p.byteLength;\n    pps.push((len >>> 8) & 0xff);\n    pps.push(len & 0xff);\n    pps.push(...p);\n  });\n\n  return new Uint8Array(\n    [\n      0x01,\n      track.profileIdc,\n      track.profileCompatibility,\n      track.levelIdc,\n      0xfc | 3,\n      0xe0 | track.sps.length\n    ]\n      .concat(sps)\n      .concat([track.pps.length])\n      .concat(pps)\n  );\n}\n"],"names":["TsDemuxer","window","alert","main","isAvcC","response","movie","tsDemuxer","avcTrack","canvas","ctx","decoderConfig","config","supported","frameCount","startTime","decoder","sleep","frame","data","timestamp","duration","chunk","fetch","Uint8Array","arrayBuffer","demux","video","document","createElement","width","height","body","appendChild","getContext","font","codec","description","AVCDecoderConfigurationRecord","VideoDecoder","isConfigSupported","console","log","output","drawImage","close","now","performance","fps","toFixed","fillText","error","configure","ms","Promise","r","setTimeout","frames","avcC","units","AnnexB","pts","EncodedVideoChunk","type","key","decode","size","reduce","t","u","byteLength","length","offset","forEach","unit","set","dataView","DataView","buffer","setUint32","track","sps","pps","len","s","push","p","profileIdc","profileCompatibility","levelIdc","concat"],"mappings":"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"}