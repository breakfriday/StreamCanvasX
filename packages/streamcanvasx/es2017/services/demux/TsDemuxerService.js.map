{"version":3,"sources":["./src/services/demux/TsDemuxerService.ts"],"sourcesContent":["// MPEG-2 TS 数据流的解复用 , 转换 mpeg-ts流为h.264视频的类\ninterface IAvcTrack {\n    codec: string;\n    width: number;\n    height: number;\n    profileIdc: number | null;\n    profileCompatibility: number | null;\n    levelIdc: number | null;\n    pps: IUnit[];\n    sps: IUnit[];\n    frames: AvcFrame[];\n}\n\ninterface IUnit {\n    // 这里填写你的 IUnit 结构\n}\n\ninterface IPes {\n    data: IUnit[];\n    pts: number;\n    dts: number;\n}\n\nclass AvcFrame {\n    public units: IUnit[];\n    public frame: boolean;\n    public key: boolean;\n    public duration: number;\n\n    constructor(public pts: number, public dts: number) {\n        this.units = [];\n        this.frame = false;\n        this.key = false;\n        this.duration = 0;\n    }\n}\n\nclass TsDemuxer {\n    prevAvcFrame: AvcFrame | null;\n\n    constructor() {\n        this.prevAvcFrame = null;\n    }\n\n    demux(data: Uint8Array): { video: IAvcTrack } {\n        let pmtId = -1;\n      let avcId = -1;\n\n      let avcPesData = [];\n\n      const avcTrack = {\n        codec: '',\n        width: 0,\n        height: 0,\n        profileIdc: null,\n        profileCompatibility: null,\n        levelIdc: null,\n        pps: [],\n        sps: [],\n        frames: [],\n      };\n\n      for (let start = 0, len = data.length; start < len; start += 188) {\n        if (data[start] !== 0x47) throw new Error('TS packet did not start with 0x47');\n        const payloadUnitStartIndicator = !!(data[start + 1] & 0x40);\n        const pid = ((data[start + 1] & 0x1f) << 8) + data[start + 2];\n        const adaptationFiledControl = (data[start + 3] & 0x30) >> 4;\n\n        let offset;\n        if (adaptationFiledControl > 1) {\n          offset = start + 5 + data[start + 4];\n          if (offset === start + 188) continue;\n        } else {\n          offset = start + 4;\n        }\n\n        switch (pid) {\n          case 0:\n            if (payloadUnitStartIndicator) offset += data[offset] + 1;\n            pmtId = ((data[offset + 10] & 0x1f) << 8) | data[offset + 11];\n            break;\n          case pmtId:\n            {\n              if (payloadUnitStartIndicator) offset += data[offset] + 1;\n              const tableEnd =\n                offset +\n                3 +\n                (((data[offset + 1] & 0x0f) << 8) | data[offset + 2]) -\n                4;\n              const programInfoLength =\n                ((data[offset + 10] & 0x0f) << 8) | data[offset + 11];\n              offset += 12 + programInfoLength;\n              while (offset < tableEnd) {\n                const esPid = ((data[offset + 1] & 0x1f) << 8) | data[offset + 2];\n                switch (data[offset]) {\n                  case 0x1b:\n                    avcId = esPid;\n                    break;\n                }\n                offset +=\n                  (((data[offset + 3] & 0x0f) << 8) | data[offset + 4]) + 5;\n              }\n            }\n            break;\n          case avcId:\n            if (payloadUnitStartIndicator && avcPesData.length) {\n              const pes = TsDemuxer.parsePES(concatUint8Array(...avcPesData));\n              if (pes) {\n                const { units } = parseAnnexBNALus(pes.data);\n                if (units) this.createAvcFrames(avcTrack, units, pes.pts, pes.dts);\n              }\n              avcPesData = [];\n            }\n            avcPesData.push(data.subarray(offset, start + 188));\n            break;\n        }\n      }\n\n      for (\n        let i = 0, l = avcTrack.frames.length, offset = 0, frame, nextFrame;\n        i < l;\n        i++\n      ) {\n        frame = avcTrack.frames[i];\n        nextFrame = avcTrack.frames[i + 1];\n\n        if (nextFrame) {\n          frame.duration = nextFrame.dts - frame.dts;\n        } else {\n          frame.duration = avcTrack.frames[i - 1]?.duration || 0;\n        }\n      }\n\n      return {\n        video: avcTrack,\n      };\n    }\n\n    static parsePES(data: Uint8Array): IPes | undefined {\n        // 省略代码，因为它和你提供的代码基本一样\n    }\n\n    createAvcFrames(track: IAvcTrack, units: IUnit[], pts: number, dts: number): void {\n        // 省略代码，因为它和你提供的代码基本一样\n    }\n\n    static getSyncOffset(data: Uint8Array): number {\n        // 省略代码，因为它和你提供的代码基本一样\n    }\n}\n"],"names":["AvcFrame","constructor","pts","dts","units","frame","key","duration","TsDemuxer","demux","data","pmtId","avcId","avcPesData","avcTrack","codec","width","height","profileIdc","profileCompatibility","levelIdc","pps","sps","frames","start","len","length","Error","payloadUnitStartIndicator","pid","adaptationFiledControl","offset","tableEnd","programInfoLength","esPid","pes","parsePES","concatUint8Array","parseAnnexBNALus","createAvcFrames","push","subarray","i","l","nextFrame","video","track","getSyncOffset","prevAvcFrame"],"mappings":"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"}