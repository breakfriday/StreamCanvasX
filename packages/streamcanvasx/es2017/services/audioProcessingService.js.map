{"version":3,"sources":["./src/services/audioProcessingService.ts"],"sourcesContent":["import { IProcess } from '../types/services';\nclass AudioProcessingService {\n  context: IProcess['context'];\n  dataArray: Float32Array;\n  bufferLength: number;\n  bufferData: Float32Array; // 时域 缓存\n  bufferDataLength: number;\n\n  constructor(parmams: { media_el?: HTMLAudioElement; canvas_el?: HTMLCanvasElement}) {\n    const { canvas_el, media_el } = parmams;\n    this.context = {};\n    if (canvas_el) {\n      this.setCanvasDom(canvas_el);\n    }\n    this.createAudioContext();\n    this.setMediaSource_el(media_el);\n    this.audioContextConnect();\n  }\n\n\n  createAudioContext() {\n    this.context.audioContext = new AudioContext();\n    this.context.analyserNode = this.context.audioContext.createAnalyser();\n\n    this.bufferLength = this.context.analyserNode!.fftSize;\n    this.dataArray = new Float32Array(this.bufferLength);\n    this.setBufferData();\n  }\n\n  setBufferData() {\n       // 根据 AudioContext 的采样率、所需的缓存时间和 FFT 大小来设置缓存区大小\n       this.bufferDataLength = Math.ceil(1 * this.context.audioContext!.sampleRate / this.dataArray.length) * this.dataArray.length;\n       this.bufferData = new Float32Array(this.bufferDataLength);\n  }\n\n  updateBufferData() {\n    let { dataArray, bufferData } = this;\n    let { bufferDataLength } = this;\n      // 将旧的数据向前移动\n    bufferData.copyWithin(0, dataArray.length);\n    this.context.analyserNode?.getFloatTimeDomainData(dataArray);\n    // 将新的数据添加到缓存的末尾\n    bufferData.set(dataArray, bufferDataLength - dataArray.length);\n    // 每帧都更新缓存\n    requestAnimationFrame(this.updateBufferData.bind(this));\n  }\n\n  drawWithBufferData() {\n    let dataArray = this.bufferData;\n    let bufferLength = this.bufferDataLength;\n    const AnimationFrame = () => {\n      // 清除画布\n      this.context.canvasContext!.clearRect(0, 0, this.context.canvas!.width, this.context.canvas!.height);\n\n      // 设置波形图样式\n      this.context.canvasContext!.lineWidth = 2;\n      this.context.canvasContext!.strokeStyle = '#7f0';\n\n\n      // 绘制波形图\n      this.context.canvasContext!.beginPath();\n      const sliceWidth = this.context.canvas!.width / bufferLength;\n      let x = 0;\n      for (let i = 0; i < bufferLength; i++) {\n        const value = dataArray[i] * this.context.canvas!.height / 2;\n        const y = this.context.canvas!.height / 2 + value;\n\n        if (i === 0) {\n          this.context.canvasContext!.moveTo(x, y);\n        } else {\n          this.context.canvasContext!.lineTo(x, y);\n        }\n\n        x += sliceWidth;\n      }\n      this.context.canvasContext!.lineTo(this.context.canvas!.width, this.context.canvas!.height / 2);\n      this.context.canvasContext!.stroke();\n\n      // 循环绘制\n      requestAnimationFrame(AnimationFrame.bind(this));\n    };\n    AnimationFrame();\n  }\n\n  setCanvasDom(el: HTMLCanvasElement) {\n    this.context.canvas = el;\n    this.context.canvasContext = this.context.canvas.getContext('2d')!;\n  }\n\n  setMediaSource_el(el) {\n    this.context.mediaSource_el = el;\n    this.context.audioSourceNode = this.context.audioContext!.createMediaElementSource(el);\n  }\n\n  resetAudioContextConnec() {\n    this.context.audioSourceNode?.disconnect();\n    this.audioContextConnect();\n  }\n\n  audioContextConnect() {\n    this.context.audioSourceNode!.connect(this.context.analyserNode!);\n    this.context.analyserNode!.connect(this.context.audioContext!.destination);\n  }\n\n  mute(parm) {\n    if (parm === true) {\n      this.context.analyserNode!.disconnect(this.context.audioContext!.destination);\n    } else {\n      this.context.analyserNode!.connect(this.context.audioContext!.destination);\n    }\n  }\n\n  visulizerDraw() {\n    const bufferLength = this.context.analyserNode!.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n    const AnimationFrame = () => {\n      requestAnimationFrame(AnimationFrame.bind(this));\n      // 获取音频数据\n      this.context.analyserNode!.getByteFrequencyData(dataArray);\n\n      // 清除canvas\n      this.context.canvasContext!.fillStyle = 'rgb(255, 255, 255)';\n      this.context.canvasContext!.fillRect(0, 0, this.context.canvas!.width, this.context.canvas!.height);\n\n      // 设置绘制音频数据的样式\n      const barWidth = (this.context.canvas!.width / bufferLength) * 2.5;\n      let barHeight;\n      let x = 0;\n\n      for (let i = 0; i < bufferLength; i++) {\n        barHeight = dataArray[i] / 2;\n\n        const r = barHeight + (25 * (i / bufferLength));\n        const g = 250 * (i / bufferLength);\n        const b = 50;\n\n        // this.canvasContext.fillStyle = 'rgb(0, 0, 0)';\n        // this.canvas_context.fillStyle = `rgb(${r},${g},${b})`;\n        this.context.canvasContext!.fillStyle = 'rgb(0, 0, 0)';\n        this.context.canvasContext!.fillRect(x, this.context.canvas!.height - barHeight, barWidth, barHeight);\n\n        x += barWidth + 1;\n      }\n    };\n    AnimationFrame();\n  }\n\n  visulizerDraw1() {\n    const bufferLength = this.context.analyserNode!.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n\n    const AnimationFrame = () => {\n      requestAnimationFrame(AnimationFrame.bind(this));\n      // 将音频数据填充到数组当中\n      this.context.analyserNode!.getByteFrequencyData(dataArray);\n\n      // 清除canvas\n      this.context.canvasContext!.fillStyle = '#000';\n      this.context.canvasContext!.fillRect(0, 0, this.context.canvas!.width, this.context.canvas!.height);\n\n      const barWidth = (this.context.canvas!.width / bufferLength) * 2.5;\n      let barHeight;\n      let x = 0;\n\n      for (let i = 0; i < bufferLength; i++) {\n        barHeight = dataArray[i];\n\n        const r = barHeight + (25 * (i / bufferLength));\n        const g = 250 * (i / bufferLength);\n        const b = 50;\n\n        this.context.canvasContext!.fillStyle = `rgb(${r},${g},${b})`;\n        this.context.canvasContext!.fillRect(x, this.context.canvas!.height - barHeight, barWidth, barHeight);\n\n        x += barWidth + 1;\n      }\n    };\n\n    AnimationFrame();\n  }\n\n\n  // 时域\n  visulizerDraw2() {\n    const bufferLength = this.context.analyserNode!.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n\n    const AnimationFrame = () => {\n      requestAnimationFrame(AnimationFrame.bind(this));\n      // 获取音频数据\n      this.context.analyserNode!.getByteFrequencyData(dataArray);\n\n\n      this.context.canvasContext!.fillStyle = 'rgba(0, 0, 0, 0.05)';\n      this.context.canvasContext!.fillRect(0, 0, this.context.canvas!.width, this.context.canvas!.height);\n      this.context.canvasContext!.lineWidth = 2;\n      this.context.canvasContext!.strokeStyle = 'rgb(0, 255, 0)';\n\n      this.context.canvasContext!.beginPath();\n\n      const sliceWidth = this.context.canvas!.width * 1.0 / bufferLength;\n      let x = 0;\n\n      for (let i = 0; i < bufferLength; i++) {\n        const v = dataArray[i] / 128.0;\n        const y = v * this.context.canvas!.height / 2;\n\n        if (i === 0) {\n          this.context.canvasContext!.moveTo(x, y);\n        } else {\n          this.context.canvasContext!.lineTo(x, y);\n        }\n\n        x += sliceWidth;\n      }\n\n      this.context.canvasContext!.lineTo(this.context.canvas!.width, this.context.canvas!.height / 2);\n      this.context.canvasContext!.stroke();\n    };\n\n    AnimationFrame();\n  }\n\n  visulizerDraw3() {\n    const { bufferLength } = this;\n    const { dataArray } = this;\n\n    const AnimationFrame = () => {\n      this.context.analyserNode!.getFloatTimeDomainData(dataArray);\n\n      // 清除画布\n      this.context.canvasContext!.clearRect(0, 0, this.context.canvas!.width, this.context.canvas!.height);\n\n      // 设置波形图样式\n      this.context.canvasContext!.lineWidth = 2;\n      this.context.canvasContext!.strokeStyle = '#7f0';\n\n\n      // 绘制波形图\n      this.context.canvasContext!.beginPath();\n      const sliceWidth = this.context.canvas!.width / bufferLength;\n      let x = 0;\n      for (let i = 0; i < bufferLength; i++) {\n        const value = dataArray[i] * this.context.canvas!.height / 2;\n        const y = this.context.canvas!.height / 2 + value;\n\n        if (i === 0) {\n          this.context.canvasContext!.moveTo(x, y);\n        } else {\n          this.context.canvasContext!.lineTo(x, y);\n        }\n\n        x += sliceWidth;\n      }\n      this.context.canvasContext!.lineTo(this.context.canvas!.width, this.context.canvas!.height / 2);\n      this.context.canvasContext!.stroke();\n\n      // 循环绘制\n      requestAnimationFrame(AnimationFrame.bind(this));\n    };\n    AnimationFrame();\n  }\n\n  visulizerDraw4() {\n    const bufferLength = this.context.analyserNode!.fftSize;\n    const dataArray = new Float32Array(bufferLength);\n    const AnimationFrame = () => {\n      requestAnimationFrame(AnimationFrame.bind(this));\n      this.context.analyserNode!.getFloatTimeDomainData(dataArray);\n\n      this.context.canvasContext!.fillStyle = 'rgba(0, 0, 0, 0.1)';\n      this.context.canvasContext!.fillRect(0, 0, this.context.canvas!.width, this.context.canvas!.height);\n\n      this.context.canvasContext!.lineWidth = 2;\n      this.context.canvasContext!.strokeStyle = 'rgb(0, 255, 0)';\n      this.context.canvasContext!.beginPath();\n\n      const sliceWidth = this.context.canvas!.width * 1.0 / bufferLength;\n      let x = 0;\n\n      for (let i = 0; i < bufferLength; i++) {\n        const v = dataArray[i] / 128.0;\n        const y = v * this.context.canvas!.height / 2;\n\n        if (i === 0) {\n          this.context.canvasContext!.moveTo(x, y);\n        } else {\n          this.context.canvasContext!.lineTo(x, y);\n        }\n\n        x += sliceWidth;\n      }\n\n      this.context.canvasContext!.lineTo(this.context.canvas!.width, this.context.canvas!.height / 2);\n      this.context.canvasContext!.stroke();\n    };\n\n    AnimationFrame();\n  }\n}\n\nexport default AudioProcessingService;\n"],"names":["AudioProcessingService","createAudioContext","context","audioContext","AudioContext","analyserNode","createAnalyser","bufferLength","fftSize","dataArray","Float32Array","setBufferData","bufferDataLength","Math","ceil","sampleRate","length","bufferData","updateBufferData","copyWithin","getFloatTimeDomainData","set","requestAnimationFrame","bind","drawWithBufferData","AnimationFrame","canvasContext","clearRect","canvas","width","height","lineWidth","strokeStyle","beginPath","sliceWidth","x","i","value","y","moveTo","lineTo","stroke","setCanvasDom","el","getContext","setMediaSource_el","mediaSource_el","audioSourceNode","createMediaElementSource","resetAudioContextConnec","disconnect","audioContextConnect","connect","destination","mute","parm","visulizerDraw","frequencyBinCount","Uint8Array","getByteFrequencyData","fillStyle","fillRect","barWidth","barHeight","r","g","b","visulizerDraw1","visulizerDraw2","v","visulizerDraw3","visulizerDraw4","constructor","parmams","canvas_el","media_el"],"mappings":"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"}