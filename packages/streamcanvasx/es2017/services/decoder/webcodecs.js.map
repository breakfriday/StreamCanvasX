{"version":3,"sources":["./src/services/decoder/webcodecs.ts"],"sourcesContent":["import { formatVideoDecoderConfigure, noop, now } from '../utils';\nimport Emitter from '../utils/emitter';\nimport { ENCODED_VIDEO_TYPE, EVENTS, EVENTS_ERROR, VIDEO_ENC_CODE, WCS_ERROR } from '../../constant';\nimport { parseAVCDecoderConfigurationRecord } from '../utils/h264';\n\n\nexport default class WebcodecsDecoder extends Emitter {\n    constructor(player) {\n        super();\n        this.player = player;\n        this.hasInit = false;\n        this.isDecodeFirstIIframe = false;\n        this.isInitInfo = false;\n        this.decoder = null;\n        this.initDecoder();\n        player.debug.log('Webcodecs', 'init');\n    }\n\n    destroy() {\n        if (this.decoder) {\n            if (this.decoder.state !== 'closed') {\n                this.decoder.close();\n            }\n            this.decoder = null;\n        }\n\n        this.hasInit = false;\n        this.isInitInfo = false;\n        this.isDecodeFirstIIframe = false;\n        this.off();\n        this.player.debug.log('Webcodecs', 'destroy');\n    }\n\n    initDecoder() {\n        const _this = this;\n        this.decoder = new VideoDecoder({\n            output(videoFrame) {\n                _this.handleDecode(videoFrame);\n            },\n            error(error) {\n                _this.handleError(error);\n            },\n        });\n    }\n\n    handleDecode(videoFrame) {\n        if (!this.isInitInfo) {\n            this.player.video.updateVideoInfo({\n                width: videoFrame.codedWidth,\n                height: videoFrame.codedHeight,\n            });\n            this.player.video.initCanvasViewSize();\n            this.isInitInfo = true;\n        }\n\n        if (!this.player._times.videoStart) {\n            this.player._times.videoStart = now();\n            this.player.handlePlayToRenderTimes();\n        }\n\n        this.player.handleRender();\n        this.player.video.render({\n            videoFrame,\n        });\n\n        this.player.updateStats({ fps: true, ts: 0, buf: this.player.demux.delay });\n    }\n\n    handleError(error) {\n        this.player.debug.error('Webcodecs', 'VideoDecoder handleError', error);\n    }\n\n    decodeVideo(payload, ts, isIframe) {\n        // this.player.debug.log('Webcodecs decoder', 'decodeVideo', ts, isIframe);\n        if (!this.hasInit) {\n            if (isIframe && payload[1] === 0) {\n                const videoCodec = (payload[0] & 0x0F);\n                this.player.video.updateVideoInfo({\n                    encTypeCode: videoCodec,\n                });\n\n                // 如果解码出来的是\n                if (videoCodec === VIDEO_ENC_CODE.h265) {\n                    this.emit(EVENTS_ERROR.webcodecsH265NotSupport);\n                    return;\n                }\n                if (!this.player._times.decodeStart) {\n                    this.player._times.decodeStart = now();\n                }\n\n                const config = formatVideoDecoderConfigure(payload.slice(5));\n                this.decoder.configure(config);\n                this.hasInit = true;\n            }\n        } else {\n            // check width or height change\n            if (isIframe && payload[1] === 0) {\n                let data = payload.slice(5);\n                const config = parseAVCDecoderConfigurationRecord(data);\n                const { videoInfo } = this.player.video;\n                if (config.codecWidth !== videoInfo.width || config.codecHeight !== videoInfo.height) {\n                    this.player.debug.log('Webcodecs', `width or height is update, width ${videoInfo.width}-> ${config.codecWidth}, height ${videoInfo.height}-> ${config.codecHeight}`);\n                    this.player.emit(EVENTS_ERROR.webcodecsWidthOrHeightChange);\n                    return;\n                }\n            }\n\n\n            // fix : Uncaught DOMException: Failed to execute 'decode' on 'VideoDecoder': A key frame is required after configure() or flush().\n            if (!this.isDecodeFirstIIframe && isIframe) {\n                this.isDecodeFirstIIframe = true;\n            }\n\n            if (this.isDecodeFirstIIframe) {\n                const chunk = new EncodedVideoChunk({\n                    data: payload.slice(5),\n                    timestamp: ts,\n                    type: isIframe ? ENCODED_VIDEO_TYPE.key : ENCODED_VIDEO_TYPE.delta,\n                });\n                this.player.emit(EVENTS.timeUpdate, ts);\n                try {\n                    if (this.isDecodeStateClosed()) {\n                        this.player.debug.warn('Webcodecs', 'VideoDecoder isDecodeStateClosed true');\n                        return;\n                    }\n                    this.decoder.decode(chunk);\n                } catch (e) {\n                    this.player.debug.error('Webcodecs', 'VideoDecoder', e);\n                    if (e.toString().indexOf(WCS_ERROR.keyframeIsRequiredError) !== -1) {\n                        this.player.emit(EVENTS_ERROR.webcodecsDecodeError);\n                    } else if (e.toString().indexOf(WCS_ERROR.canNotDecodeClosedCodec) !== -1) {\n                        this.player.emit(EVENTS_ERROR.webcodecsDecodeError);\n                    }\n                }\n            } else {\n                this.player.debug.warn('Webcodecs', 'VideoDecoder isDecodeFirstIIframe false');\n            }\n        }\n    }\n\n    isDecodeStateClosed() {\n        return this.decoder.state === 'closed';\n    }\n}\n"],"names":["formatVideoDecoderConfigure","now","Emitter","ENCODED_VIDEO_TYPE","EVENTS","EVENTS_ERROR","VIDEO_ENC_CODE","WCS_ERROR","parseAVCDecoderConfigurationRecord","WebcodecsDecoder","destroy","decoder","state","close","hasInit","isInitInfo","isDecodeFirstIIframe","off","player","debug","log","initDecoder","_this","VideoDecoder","output","videoFrame","handleDecode","error","handleError","video","updateVideoInfo","width","codedWidth","height","codedHeight","initCanvasViewSize","_times","videoStart","handlePlayToRenderTimes","handleRender","render","updateStats","fps","ts","buf","demux","delay","decodeVideo","payload","isIframe","videoCodec","encTypeCode","h265","emit","webcodecsH265NotSupport","decodeStart","config","slice","configure","data","videoInfo","codecWidth","codecHeight","webcodecsWidthOrHeightChange","chunk","EncodedVideoChunk","timestamp","type","key","delta","timeUpdate","isDecodeStateClosed","warn","decode","e","toString","indexOf","keyframeIsRequiredError","webcodecsDecodeError","canNotDecodeClosedCodec","constructor"],"mappings":"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"}