{"version":3,"sources":["./src/services/stream/fetch_stream_loader.ts"],"sourcesContent":["class HttpFlvStreamLoader {\n    private _requestAbort: boolean;\n    private _abortController: AbortController;\n    constructor() {\n        this.requestAbort = false;\n        this._abortController = new AbortController();\n    }\n    static isSupported() {\n        if (window.fetch && window.ReadableStream) {\n             return true;\n        } else {\n            console.log('Fetch and Stream API are not supported');\n            return false;\n        }\n    }\n    get requestAbort(): boolean {\n        return this._requestAbort;\n    }\n    set requestAbort(value: boolean) {\n        this._requestAbort = value;\n    }\n    get abortController() {\n        return this._abortController;\n    }\n\n\n    async fetchStream(url: string): Promise<void> {\n        let sourceUrl = url;\n        let headers = new Headers();\n        let params: RequestInit = {\n            method: 'GET',\n            mode: 'cors', // cors is enabled by default\n            credentials: 'same-origin', // withCredentials is disabled by default\n            headers: headers,\n            cache: 'default',\n            referrerPolicy: 'no-referrer-when-downgrade',\n            signal: this.abortController.signal,\n\n        };\n\n        try {\n            const response: Response = await fetch(url, params);\n            if (this.requestAbort === true) {\n                response.body.cancel();\n                return;\n            }\n\n            const reader = response.body?.getReader();\n            if (reader) {\n                await this.processStream(reader);\n            }\n        } catch (e) {\n\n        }\n    }\n\n    abortFetch(): void {\n        this.abortController.abort();\n    }\n\n\n    async processStream(reader: ReadableStreamDefaultReader): Promise<void> {\n        while (true) {\n            try {\n                const { done, value } = await reader.read();\n                let chunk = value.value.buffer;\n                if (done) {\n                    console.log('Stream complete');\n                    return;\n                }\n\n                // Your process goes here, where you can handle each chunk of FLV data\n                // For example:\n                // this.processFlvChunk(value);\n            } catch (e) {\n                console.error('Error reading stream', e);\n                return;\n            }\n        }\n    }\n\n    processFlvChunk(chunk: Uint8Array): void {\n\n\n    }\n}\n\nexport { HttpFlvStreamLoader };"],"names":["HttpFlvStreamLoader","isSupported","window","fetch","ReadableStream","console","log","requestAbort","_requestAbort","value","abortController","_abortController","fetchStream","url","sourceUrl","headers","Headers","params","method","mode","credentials","cache","referrerPolicy","signal","response","body","cancel","reader","getReader","processStream","e","abortFetch","abort","done","read","chunk","buffer","error","processFlvChunk","constructor","AbortController"],"mappings":";AAAA,MAAMA;IAOF,OAAOC,cAAc;QACjB,IAAIC,OAAOC,KAAK,IAAID,OAAOE,cAAc,EAAE;YACtC,OAAO,IAAI;QAChB,OAAO;YACHC,QAAQC,GAAG,CAAC;YACZ,OAAO,KAAK;QAChB,CAAC;IACL;IACA,IAAIC,eAAwB;QACxB,OAAO,IAAI,CAACC,aAAa;IAC7B;IACA,IAAID,aAAaE,KAAc,EAAE;QAC7B,IAAI,CAACD,aAAa,GAAGC;IACzB;IACA,IAAIC,kBAAkB;QAClB,OAAO,IAAI,CAACC,gBAAgB;IAChC;IAGA,MAAMC,YAAYC,GAAW,EAAiB;QAC1C,IAAIC,YAAYD;QAChB,IAAIE,UAAU,IAAIC;QAClB,IAAIC,SAAsB;YACtBC,QAAQ;YACRC,MAAM;YACNC,aAAa;YACbL,SAASA;YACTM,OAAO;YACPC,gBAAgB;YAChBC,QAAQ,IAAI,CAACb,eAAe,CAACa,MAAM;QAEvC;QAEA,IAAI;gBAOeC;YANf,MAAMA,WAAqB,MAAMrB,MAAMU,KAAKI;YAC5C,IAAI,IAAI,CAACV,YAAY,KAAK,IAAI,EAAE;gBAC5BiB,SAASC,IAAI,CAACC,MAAM;gBACpB;YACJ,CAAC;YAED,MAAMC,SAASH,CAAAA,iBAAAA,SAASC,IAAI,cAAbD,4BAAAA,KAAAA,IAAAA,eAAeI;YAC9B,IAAID,QAAQ;gBACR,MAAM,IAAI,CAACE,aAAa,CAACF;YAC7B,CAAC;QACL,EAAE,OAAOG,GAAG,CAEZ;IACJ;IAEAC,aAAmB;QACf,IAAI,CAACrB,eAAe,CAACsB,KAAK;IAC9B;IAGA,MAAMH,cAAcF,MAAmC,EAAiB;QACpE,MAAO,IAAI,CAAE;YACT,IAAI;gBACA,MAAM,EAAEM,KAAI,EAAExB,MAAK,EAAE,GAAG,MAAMkB,OAAOO,IAAI;gBACzC,IAAIC,QAAQ1B,MAAMA,KAAK,CAAC2B,MAAM;gBAC9B,IAAIH,MAAM;oBACN5B,QAAQC,GAAG,CAAC;oBACZ;gBACJ,CAAC;YAED,sEAAsE;YACtE,eAAe;YACf,+BAA+B;YACnC,EAAE,OAAOwB,GAAG;gBACRzB,QAAQgC,KAAK,CAAC,wBAAwBP;gBACtC;YACJ;QACJ;IACJ;IAEAQ,gBAAgBH,KAAiB,EAAQ,CAGzC;IAjFAI,aAAc;QAFd,uBAAQ/B,iBAAR,KAAA;QACA,uBAAQG,oBAAR,KAAA;QAEI,IAAI,CAACJ,YAAY,GAAG,KAAK;QACzB,IAAI,CAACI,gBAAgB,GAAG,IAAI6B;IAChC;AA+EJ;AAEA,SAASxC,mBAAmB,GAAG"}