{"version":3,"sources":["./src/serviceFactories/createMainPlayerInstance.ts"],"sourcesContent":["import { container1 } from '../container';\nimport AudioProcessingService from '../services/audioProcessingService';\nimport mainPlayerService from '../services/mainCanvasPlayer';\nimport { TYPES } from './symbol';\nimport { IAudioProcessingService } from '../types/services';\nimport { interfaces } from 'inversify';\nimport { ImainPlayerService } from '../types/services';\n\n\ncontainer1.bind<interfaces.Factory<mainPlayerService>>(TYPES.IMainPlayerService)\n.toFactory<mainPlayerService>((context) => {\n    return (parmams: Parameters<ImainPlayerService['factory']>[0]) => {\n        let instance = new mainPlayerService(parmams);\n        return instance;\n    };\n});\n\n\nfunction createMainPlayerInstance(parmams: Parameters<ImainPlayerService['factory']>[0]) {\n//    const MainPlayer=\n  const MainPlayerFactory: (parmams: Parameters<ImainPlayerService['factory']>[0]) => mainPlayerService = container1.get<interfaces.Factory<mainPlayerService>>(TYPES.IMainPlayerService);\n  let instance = MainPlayerFactory(parmams);\n  return instance;\n}\n\nexport { createMainPlayerInstance };"],"names":["container1","mainPlayerService","TYPES","bind","IMainPlayerService","toFactory","context","parmams","instance","createMainPlayerInstance","MainPlayerFactory","get"],"mappings":"AAAA,SAASA,UAAU,QAAQ,eAAe;AAE1C,OAAOC,uBAAuB,+BAA+B;AAC7D,SAASC,KAAK,QAAQ,WAAW;AAMjCF,WAAWG,IAAI,CAAwCD,MAAME,kBAAkB,EAC9EC,SAAS,CAAoB,CAACC,UAAY;IACvC,OAAO,CAACC,UAA0D;QAC9D,IAAIC,WAAW,IAAIP,kBAAkBM;QACrC,OAAOC;IACX;AACJ;AAGA,SAASC,yBAAyBF,OAAqD,EAAE;IACzF,uBAAuB;IACrB,MAAMG,oBAAkGV,WAAWW,GAAG,CAAwCT,MAAME,kBAAkB;IACtL,IAAII,WAAWE,kBAAkBH;IACjC,OAAOC;AACT;AAEA,SAASC,wBAAwB,GAAG"}